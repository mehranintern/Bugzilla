{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devsinc\\\\Project 3\\\\Bugzilla\\\\bugzilla-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './BugAnimation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [paused, setPaused] = useState(false);\n  useEffect(() => {\n    // Function to pause and resume the bug animation randomly\n    const togglePause = () => {\n      setPaused(true);\n      setTimeout(() => setPaused(false), Math.random() * 2000 + 1000); // Pause for 1-2 seconds\n    };\n\n    // Start the animation with a pause\n    togglePause();\n\n    // Set up interval to pause and resume animation at random intervals\n    const intervalId = setInterval(togglePause, Math.random() * 5000 + 3000); // Pause for 3-5 seconds\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, this is your Bug\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bug ${paused ? 'paused' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ry/vE2ASu/TtvMwJe6Gkyl+tinU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","paused","setPaused","togglePause","setTimeout","Math","random","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Devsinc/Project 3/Bugzilla/bugzilla-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './BugAnimation.css';\r\n\r\nfunction App() {\r\n  const [paused, setPaused] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Function to pause and resume the bug animation randomly\r\n    const togglePause = () => {\r\n      setPaused(true);\r\n      setTimeout(() => setPaused(false), Math.random() * 2000 + 1000); // Pause for 1-2 seconds\r\n    };\r\n\r\n    // Start the animation with a pause\r\n    togglePause();\r\n\r\n    // Set up interval to pause and resume animation at random intervals\r\n    const intervalId = setInterval(togglePause, Math.random() * 5000 + 3000); // Pause for 3-5 seconds\r\n\r\n    // Clear the interval when the component unmounts\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Hello, this is your Bug</h1>\r\n      <div className={`bug ${paused ? 'paused' : ''}`}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;MACxBD,SAAS,CAAC,IAAI,CAAC;MACfE,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAK,CAAC,EAAEG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;;IAED;IACAH,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMI,UAAU,GAAGC,WAAW,CAACL,WAAW,EAAEE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;IAE1E;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChB,OAAA;MAAKiB,SAAS,EAAG,OAAMd,MAAM,GAAG,QAAQ,GAAG,EAAG;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACd,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}