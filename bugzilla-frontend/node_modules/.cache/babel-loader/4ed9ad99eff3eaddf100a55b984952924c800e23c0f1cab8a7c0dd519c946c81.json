{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devsinc\\\\Project 3\\\\Bugzilla\\\\bugzilla-frontend\\\\src\\\\Components\\\\Pages\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = \"http://localhost:5000\";\nfunction FileUpload({\n  onUpload\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectDescription, setProjectDescription] = useState(\"\");\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      console.error(\"No file selected for upload\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append(\"my_file\", selectedFile);\n      const response = await axios.post(\"/upload\", formData);\n      if (response.data.secure_url) {\n        onUpload(projectName, projectDescription); // Pass the project name to the onUpload function\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleAddProjectClick = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(\"/api/user/userlogin\", {});\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    // You can handle the form submission here\n    // For example, send the project name and description to a server\n    // Reset the form fields and close the modal\n    onUpload(projectName, projectDescription); // Pass the project name when the form is submitted\n    setProjectName(\"\");\n    setProjectDescription(\"\");\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"transparent\",\n      size: \"sm\",\n      className: \"buttons\",\n      onClick: handleAddProjectClick,\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"project-form\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"projectName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter project name\",\n              value: projectName,\n              onChange: e => setProjectName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"projectDescription\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"Enter project description\",\n              value: projectDescription,\n              onChange: e => setProjectDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"+fjspFF74C1E6hr8zeks/uyZr5o=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","Button","Modal","Form","jsxDEV","_jsxDEV","defaults","baseURL","FileUpload","onUpload","_s","selectedFile","setSelectedFile","showModal","setShowModal","projectName","setProjectName","projectDescription","setProjectDescription","handleFileChange","event","target","files","length","handleUpload","console","error","formData","FormData","append","response","post","data","secure_url","handleAddProjectClick","handleCloseModal","handleSubmit","log","children","variant","size","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","value","onChange","e","as","rows","Footer","_c","$RefreshReg$"],"sources":["D:/Devsinc/Project 3/Bugzilla/bugzilla-frontend/src/Components/Pages/FileUpload.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\naxios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\ninterface FileUploadProps {\r\n  onUpload: (projectName: string, projectDescription: string) => void; // Updated type to accept a string\r\n}\r\n\r\nfunction FileUpload({ onUpload }: FileUploadProps) {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [projectName, setProjectName] = useState<string>(\"\");\r\n  const [projectDescription, setProjectDescription] = useState<string>(\"\");\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      setSelectedFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      console.error(\"No file selected for upload\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"my_file\", selectedFile);\r\n\r\n      const response = await axios.post(\"/upload\", formData);\r\n\r\n      if (response.data.secure_url) {\r\n        onUpload(projectName, projectDescription); // Pass the project name to the onUpload function\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddProjectClick = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/user/userlogin\", {\r\n      });\r\n      console.log(response.data)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    // You can handle the form submission here\r\n    // For example, send the project name and description to a server\r\n    // Reset the form fields and close the modal\r\n    onUpload(projectName, projectDescription); // Pass the project name when the form is submitted\r\n    setProjectName(\"\");\r\n    setProjectDescription(\"\");\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Button\r\n        variant=\"transparent\"\r\n        size=\"sm\"\r\n        className=\"buttons\"\r\n        onClick={handleAddProjectClick}\r\n      >\r\n        Add Project\r\n      </Button>\r\n     \r\n\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Project</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form className=\"project-form\">\r\n            <Form.Group controlId=\"projectName\">\r\n              <Form.Label>Project Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter project name\"\r\n                value={projectName}\r\n                onChange={(e) => setProjectName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"projectDescription\">\r\n              <Form.Label>Project Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"Enter project description\"\r\n                value={projectDescription}\r\n                onChange={(e) => setProjectDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"dark\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}